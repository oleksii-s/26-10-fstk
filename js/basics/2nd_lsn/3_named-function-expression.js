
/*
Именованные функциональные выражения

Специально для работы с рекурсией в JavaScript существует особое расширение
функциональных выражений, которое называется «Named Function Expression» (сокращённо NFE)
*/

// Обычное функциональное выражение:

var f = function(...) { /* тело функции */ };

// Именованное с именем sayHi:

var f = function sayHi(...) { /* тело функции */ };


// Имя функционального выражения (sayHi) имеет особый смысл.
// Оно доступно только изнутри самой функции.
//
// Внутреннее имя позволяет функции надёжно обращаться к самой себе, где бы она ни находилась.
// Пример:

function f(n) {
  return n ? n * f(n - 1) : 1;
};

alert( f(5) ); // 120

// Попробуем перенести её в другую переменную g

var g = f;
f = null;

alert( g(5) ); // Ошибка! функция из своего кода обращается к своему старому имени f

// Что нам поможет? - NFE :)

var f = function factorial(n) {
  return n ? n*factorial(n-1) : 1;
};

var g = f;
f = null;

alert( g(5) ); // 120, работает!
